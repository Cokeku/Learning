# -*- coding: utf-8 -*-
# Author: Hao Zhao

"""
树转化为二叉树：
1. 将节点的所有兄弟节点用横线连接起来
2. 删除所有与子节点间的连接，只保留与最左子节点的链接
3. 顺时针旋转45度

二叉树转化为树：
1. 逆时针旋转45度
2. 按层增加父子关系的连接，同时删除兄弟节点之间的连接

森林转化为二叉树：
1. 将各树的树根从左到右连接起来
2. 利用树转化为二叉树的原则
3. 顺时针旋转45度

二叉树转化为森林：
1. 逆时针转化45度
2. 按照左子树为父子关系，右子树为兄弟关系的原则逐步划分

树的3种遍历方式：
中序遍历：
1. 以中序遍历法去遍历T1
2. 访问树根R
3. 再以中序法遍历T2，T3...Tm


前序遍历：
1. 访问树根R
2. 再以前序法依次遍历T1,T2,T3...Tm


后序遍历：
1. 以后序法依次访问T1,T2,T3...Tm
2. 访问树根R


森林的3种遍历方式：
中序遍历：
1. 若森林为空，则直接返回
2. 以中序遍历第一棵树的子树群
3. 中序遍历森林中第一棵树的树根
4. 按中序法遍历森林中其他树

前序遍历：
1. 若森林为空，则直接返回
2. 遍历森林中第一颗树的树根
3. 按前序遍历第一颗树的子树群
4. 按前序法遍历森林中的其他树

后序遍历：
1. 若森林为空，则直接返回
2. 按后序遍历第一棵树的子树
3. 按后序遍历法遍历森林中其他树
4. 遍历森林中第一颗树的树根


确定唯一二叉树：
如果有中序与前序的遍历结果或者中序与后序的遍历结果即可根据结果求得唯一的二叉树
方法：
1. 根据前序或者后序结果找到树根
2. 根据树根划分中序结果的左子树和右子树
3. 再去确定左子树和右子树的根
4. ......

"""