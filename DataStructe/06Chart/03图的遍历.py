# -*- coding: utf-8 -*-
# Author: Hao Zhao

"""
图的遍历：
    深度优先（结合递归和堆栈两种数据结构）
    广度优先（结合递归和队列两种数据结构）

深度优先：从图的某个顶点开始遍历，被访问的顶点打上已访问的记号，接着遍历此顶点的所有相邻且未被访问过的顶点中的任意一个，
然后做上访问的记号，再以该点为新起点继续进行深度优先的搜索
无向图深度优先遍历过程：
1. 遍历某个顶点并打上标签
2. 将该顶点的相邻顶点进行压栈处理
3. 然后进行出栈，并打上标签
4. 循环以上步骤，直到出栈顶点的所有相邻顶点全部被打上标签，就不再做压栈处理
5. 最后将栈中的所有顶点进行出栈处理并判断是否已经遍历过，直到堆栈内无节点可以遍历为止

广度优先：从图的某个顶点开始遍历，被访问的顶点打上已访问的记号，接着遍历此顶点的所有相邻且未被访问过的顶点中的任意一个，
然后做上访问的记号，再以该点为新起点继续进行深度优先的搜索
无向图深度优先遍历过程：
1. 遍历某个顶点并打上标签
2. 将该顶点的相邻顶点进行进队列处理
3. 然后进行出队列，并打上标签
4. 循环以上步骤，直到出栈顶点的所有相邻顶点全部被打上标签，就不再做进队列处理
5. 最后将队列中的所有顶点进行出队列处理并判断是否已经遍历过，直到队列内无节点可以遍历为止

"""